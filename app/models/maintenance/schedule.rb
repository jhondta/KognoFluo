# frozen_string_literal: true

class Maintenance::Schedule < ApplicationRecord
  # -- -------------------------------------------------------------------------
  # -- Constants ---------------------------------------------------------------
  STATUSES = %i[ inactive active ].freeze

  # -- -------------------------------------------------------------------------
  # -- Enums -------------------------------------------------------------------
  enum :status, STATUSES

  # -- -------------------------------------------------------------------------
  # -- Associations ------------------------------------------------------------
  belongs_to :plan, class_name: 'Maintenance::Plan',
             foreign_key: :maintenance_plan_id

  has_many :schedule_assignments, class_name: 'Maintenance::ScheduleAssignment',
           foreign_key: :maintenance_schedule_id, dependent: :restrict_with_error

  has_rich_text :notes

  # -- -------------------------------------------------------------------------
  # -- Scopes ------------------------------------------------------------------

  # -- -------------------------------------------------------------------------
  # -- Validations -------------------------------------------------------------
  validates :planned_date, presence: true
  validates :status, presence: true, inclusion: { in: STATUSES }

  # -- -------------------------------------------------------------------------
  # -- Callbacks ---------------------------------------------------------------

  # -- -------------------------------------------------------------------------
  # -- Delegations -------------------------------------------------------------

  # -- -------------------------------------------------------------------------
  # -- Methods -----------------------------------------------------------------
end
